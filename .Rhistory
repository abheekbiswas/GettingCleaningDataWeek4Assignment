demo(barplot(SL))
iris2[,SL]
iris2[1:10,]
iris2[,"Sepal.Width"]
Test1 <- read.csv("/Users/abheekb-25/Documents/Abheek_Personal/Documents/R-Exercise/Test1.csv")
View(Test1)
plot(Test1$Red)
iris <- read.csv("/Users/abheekb-25/Documents/Abheek_WAT/Other Documents/Research Tools/R Tools/iris.csv", header=FALSE)
View(iris)
plot(iris$V1)
plot(iris$V1, iris$V3)
hist(iris$V1)
hist(iris$V1, breaks = 2)
pie(iris$V3)
pie(iris$V7)
pie(iris$V4)
pie(iris$V1)
boxplot(iris$V1)
boxplot(iris$V3)
boxplot(iris$V2)
clear
install.packages("KernSmooth")
library(KernSmooth)
clear
getwd()
clr
clr()
clear()
getwd()
setwd("/Users/abheekb-25/Documents/Abheek_Personal/DataScience")
getwd()
x <-1
print(x)
msg <- "Hello"
msg
print(msg)
print(x)
print(msg)
x <- 1:20
x
print(x)
runif(3, 1, 10)
runif(3, 1, 6)
library(swirl)
swirl()
5+7
x <- 5+7
x
y <- x-3
y
z <- c(1.1, 9, 3.14)
?c
z
c(z, 555, z)
z*2+100
my_sqrt <- sqrt(z-1)
mysqrt
my_sqrt
my_div <- z/my_sqrt
my_div
c(1,2,3,4)+c(0,10)
c(1:4)+c(0,10,100)
c(1,2,3,4)+c(0,10,100)
z*2+1000
my_div
swirl()
getwd()
ls()
x <- 9
ls()
list.files()
dir()
?list.files
args(list.files)
old.dir <- getwd()
dir.create(testdir)
dir.create("testdir"")
testdir
"testdir"
list.files()
dir.create("testdir")
setwd(testdir)
dir()
setwd("testdir")
getwd()
file.create("mytest.R")
dir()
file.exists("mytest.R")
file.info("mytest.R")
file.rename("mytest.R", "mytest2.R")
file.copy("mytest2.R", "mytest3.R")
file.path("mytest3.R")
?file.path
file.path(folder1, folder2)
nxt()
file.path("mytest3.R", folder1, folder2)
file.path("mytest3.R", 'folder1', 'folder2')
file.path("folder1", "folder2")
?dir.create
dir.create(file.path("testdir2", "testdir3"))
dir.create(file.path("testdir2", "testdir3"), recursive = TRUE)
old.dir
setwd(old.dir)
unlink(testdir)
unlink("testdir")
?unlink
unlink("testdir", recursive = TRUE)
1:20
pi:10
15:1
?`:`
seq(1,20)
seq(0,10,by=.5)
seq(5,10,length=30)
my_seq <- seq(5,10,length=30)
length(my_seq)
1:length(my_seq)
seq(along.with=my_seq)
seq_along(my_seq)
rep(0, time=40)
rep(0, times=40)
rep(c(0,1,2), times=10)
rep(c(0,1,2), each=10)
num_vect <- c(0.5, 55, -10, 6)
tf <- num_vect <1
tf
num_vect >= 6
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse=" ")
my_name <- c(my_char, "Abheek")
my_name
paste(my_name, collapse=" ")
paste("hello","world!",sep=" ")
paste("Hello","world!",sep=" ")
paste(c(1:3), c("X", "Y", "Z"), sep="")
paste(LETTERS, 1:4, sep="-")
x <- c(44, NA, 5, NA)
x*3
y <- rnorm(1000)
z <- rep(NA, 1000)
my_data <- sample(c(y,z),100)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0/0
Inf - Inr
inf-inf
Inf-Inf
x
x[1:10]
is.na(s)
is.na(x)
x[is.na(x)]
y <- x[!is.na(x)]
y
y>0
y[y>0]
x[x>0]
x[!is.na(x) & x>0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect <- c(foo=11, bar=2, norf=NA)
vect
names(vect)
vect2 <- c(11,2,NA)
names(vect2) <- c("foo","bar","norf")
identical(vect,vect2)
vect["bar"]
vect[c("foo","bar")]
swirl()
library("swirl")
swirl()
my_vector <- c(1:20)
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
my_matrix2 <- matrix(1:20, 4,5)
identical(my_matrix,my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(cnames, my_data)
?colnames
colnames(my_data)
colnames(my_data) <- cnames
my_data
TRUE == TRUE
(FALSE == TRUE) == FALSE
6 == 7
6 < 7
10 <=10
5 != 7
5 != 7
5!== 7
!(5==7)
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5>8 || 6 != 8 && 4 > 3.9
isTRUE(6>4)
identical("twins","twins")
xor(5=6, !FALSE)
xor(5==6, !FALSE)
ints <- sample(10)
?sample
ints
ints>5
which(ints>7)
any(ints<0)
all(ints>0)
Sys.Date()
mean(c(2,4,5))
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(url = fileUrl, destfile = "getdata.csv", method = "curl")
data <- read.table("getdata.csv", header = TRUE, sep = ",")
head(data)
agricultureLogical <- data$ACR == 3 & data$AGS ==6
head(which(agricultureLogical), 3)
library(jpeg)
library("jpeg")
install.packages("jpeg")
library(jpeg)
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg"
download.file(url = fileUrl, destfile = "jeff.jpg", method = "curl")
jpg <- readJPEG("jeff.jpg", native = TRUE)
quantile(jpg, probs = c(0.3, 0.8))
fileUrl1 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
fileUrl2 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
download.file(fileUrl1, destfile = "GDP.csv", method = "curl")
download.file(fileUrl2, destfile = "country.csv", method = "curl")
gdp <- read.csv("FGDP.csv", header = TRUE, skip = 3, sep = ",")
gdp <- read.csv("GDP.csv", header = TRUE, skip = 3, sep = ",")
edu <- read.csv("country.csv", header = TRUE)
library(data.table)
library(dplyr)
gdp <- fread("GDP.csv", skip = 4, nrows = 190, select = c(1, 2, 4, 5), col.names = c("CountryCode", "Rank", "Economy", "Total"))
edu <- fread("country.csv")
view(gdp)
View(gdp)
View(edu)
merge <- merge(gdp, edu, by = 'CountryCode')
nrow(merge)
arrange(merge, desc(Rank))[13, Economy]
arrange(merge, desc(Rank))[13, "Economy"]
tapply(merge$Rank, merge$`Income Group`, mean)
merge$RankGroups <- cut(merge$Rank, breaks = 5)
table(merge$RankGroups, merge$`Income Group`)
library(swirl)
ls()
rm(list=ls())
swirl()
library(tidyr)
students
?gather
gather(students,sex,count,-grade)
students2
res <- gather(key=sex_class, value=count)
res <- gather(students2,key=sex_class, value=count)
res <- gather(students2, sex_class, count,-grade)
res
?separate
separate(res,sex_class,c("sex","class"))
submit()
submit()
students3
submit()
?spread
submit()
submit()
submit()
submit()
library(readr)
parse_number("class5")
play()
?parse_number
?parse_numeric
nxt()
nxt()
submit()
submit()
submit()
students4
submit()
submit()
submit()
submit()
passes
passed
failed
mutate(passed,status="passed")
passed <- mutate(passed, status="passed")
failed <- mutate(failed, status="failed")
?bind_rows
bind_rows(passed, falied)
bind_rows(passed, failed)
sat
submit()
submit()
submit()
mydf <- read.csv(path2csv,stringsAsFactors=FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
cran
?select
select(cran, ip_id, package, country)
5:20
select(cran, r_arch:country)
select(cran, country:r_arch)
cran
select(cran,-time)
-5:20
-(5:20)
select(cran,-(X:size))
filter(cran, package=="swirl")
filter(cran,r_version=="3.1.1.",country=="US")
filter(cran, r_version == "3.1.1", country == "US")
?Comparison
filter(cran, r_version <= "3.0.2", country == "IN")
filter(cran, country == "US" | country == "IN")
filter(cran,size>100500, r_os == "linux-gnu")
is.na(c(3,5,NA,10))
!is.na(c(3,5,NA,10))
filter(cran,!is.na(r_version))
cran2 <- select(cra,,size:ip_id)
cran2 <- select(cran,size:ip_id)
arrange(cran2,ip_id)
arrange(cran2,desc(ip_id)
)
arrange(cran2, package, ip_id)
arrange(cran2, country,desc(r_version),ip_id)
cran3 <- select(cran, ip_id,package,size)
cran3
mutate(cran3, size_mb=size/2^20)
mutate(cran3, size_mb=size/2^20,size_gb=size_mb/2^10)
cran3 <- mutate(cran,size=size-1000)
mutate(cran3,correct_size=size+1000)
summarize(cran,avg_bytes=mean(size)
)
library(dplyr)
cran <- tbl_df(mydf)
rm("mydf")
cran
?group_by
by_package <- group_by(cran, package)
by_package
summarize(by_package, mean(size))
submit()
pack_sum
quantile(pack_sum$count,probs=.99)
top_counts <- filter(pack_sum, count>679)
top_counts
View(top_counts)
top_counts_sorted <- arrange(top_counts, desc(count))
View(top_counts_sorted)
quantile(pack_sum$unique, probs=.99)
top_unique <- filter(pack_sum,unique>465)
View(top_unique)
top_unique_sorted <- arrange(top_unique,desc(unique()))
top_unique_sorted <- arrange(top_unique,desc(unique))
View(top_unique_sorted
)
submit()
submit()
submit()
View(result3)
submit()
submit()
submit()
submit()
getwd()
setwd("/Users/abheekb-25/Documents/Abheek_Personal/DataScience/Getting&CleaningDataWeek4")
getwd()
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(fileUrl, destfile = "hid.csv", method = "curl")
housingdata <- read.csv("hid.csv")
list <- strsplit(names(housingdata), split = "wgtp")
head(housingdata)
list[123]
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
download.file(fileUrl, destfile = "GDP.csv", method = "curl")
gdp <- read.csv("GDP.csv", skip = 4, nrows = 190)
view(gdp)
View(gdp)
cleanData <- gsub(",", "", gdp$X.4)
cleanData <- (as.numeric(cleanData))
mean(cleanData, na.rm = TRUE)
countryNames <- gdp$X.3
grep("^United",countryNames)
fileUrl1 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
fileUrl2 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
download.file(fileUrl1, destfile = "GDP.csv", method = "curl"); download.file(fileUrl2, destfile = "edu.csv", method = "curl")
gdpdata <- read.csv("GDP.csv", skip = 4, nrows = 190)
edudata <- read.csv("edu.csv")
View(gdpdata)
View(edudata)
mergeData <- merge(gdpdata, edudata, by.x = "X", by.y = "CountryCode")
View(mergeData)
june <- grep('Fiscal year end: June', mergeData$Special.Notes)
length(june)
install.packages("quantmod")
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
sampleTimes
View(sampleTimes)
year2012 <- grepl('2012-*', sampleTimes)
sampleTimes2012 <- subset(sampleTimes, year2012)
day <- format(sampleTimes2012, '%A')
table(year2012)
table(day)
getwd()
ls()
list(rm=ls())
rm=list(ls())
rm(list(ls()))
rm(list=ls())
getwd()
setwd("/Users/abheekb-25/Documents/Abheek_Personal/DataScience/Getting&CleaningDataWeek4/assignment")
getwd()
source('/Users/abheekb-25/Documents/Abheek_Personal/DataScience/Getting&CleaningDataWeek4/Assignment/run_analysis.R')
source('/Users/abheekb-25/Documents/Abheek_Personal/DataScience/Getting&CleaningDataWeek4/Assignment/run_analysis.R')
rm(list=ls())
if(!file.exists("./data")){dir.create("./data")}
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
download.file(fileUrl,destfile="./data/Dataset.zip",method="curl")
unzip(zipfile="./data/Dataset.zip",exdir="./data")
path_rf <- file.path("./data" , "UCI HAR Dataset")
files<-list.files(path_rf, recursive=TRUE)
files
dataActivityTest  <- read.table(file.path(path_rf, "test" , "Y_test.txt" ),header = FALSE)
dataActivityTrain <- read.table(file.path(path_rf, "train", "Y_train.txt"),header = FALSE)
dataSubjectTrain <- read.table(file.path(path_rf, "train", "subject_train.txt"),header = FALSE)
dataSubjectTest  <- read.table(file.path(path_rf, "test" , "subject_test.txt"),header = FALSE)
## Read the Features files
dataFeaturesTest  <- read.table(file.path(path_rf, "test" , "X_test.txt" ),header = FALSE)
dataFeaturesTrain <- read.table(file.path(path_rf, "train", "X_train.txt"),header = FALSE)
str(dataActivityTest)
str(dataActivityTrain)
str(dataSubjectTrain)
str(dataSubjectTest)
str(dataFeaturesTest)
str(dataFeaturesTrain)
dataSubject <- rbind(dataSubjectTrain, dataSubjectTest)
dataActivity<- rbind(dataActivityTrain, dataActivityTest)
dataFeatures<- rbind(dataFeaturesTrain, dataFeaturesTest)
names(dataSubject)<-c("subject")
names(dataActivity)<- c("activity")
dataFeaturesNames <- read.table(file.path(path_rf, "features.txt"),head=FALSE)
names(dataFeatures)<- dataFeaturesNames$V2
dataCombine <- cbind(dataSubject, dataActivity)
Data <- cbind(dataFeatures, dataCombine)
subdataFeaturesNames<-dataFeaturesNames$V2[grep("mean\\(\\)|std\\(\\)", dataFeaturesNames$V2)]
selectedNames<-c(as.character(subdataFeaturesNames), "subject", "activity" )
Data<-subset(Data,select=selectedNames)
str(Data)
activityLabels <- read.table(file.path(path_rf, "activity_labels.txt"),header = FALSE)
head(Data$activity,30)
Data$activity<-factor(Data$activity);
Data$activity<- factor(Data$activity,labels=as.character(activityLabels$V2))
head(Data$activity,30)
names(Data)<-gsub("^t", "time", names(Data))
names(Data)<-gsub("^f", "frequency", names(Data))
names(Data)<-gsub("Acc", "Accelerometer", names(Data))
names(Data)<-gsub("Gyro", "Gyroscope", names(Data))
names(Data)<-gsub("Mag", "Magnitude", names(Data))
names(Data)<-gsub("BodyBody", "Body", names(Data))
names(Data)
library(plyr);
Data2<-aggregate(. ~subject + activity, Data, mean)
Data2<-Data2[order(Data2$subject,Data2$activity),]
write.table(Data2, file = "tidydata.txt",row.name=FALSE)
View(tidydata.txt)
library(plyr);
Data2<-aggregate(. ~subject + activity, Data, mean)
Data2<-Data2[order(Data2$subject,Data2$activity),]
write.table(Data2, file = "tidydata.txt",row.name=FALSE)
library(knitr)
knit2html("codebook.Rmd");
install.packages("knitr")
library(knitr)
knit2html("codebook.Rmd");
?knit2html
knit2html("codebook.Rmd")
knit2html("codebook.md")
write.table(Data2, file = "tidydata.csv",row.name=FALSE)
install.packages("knitr")
install.packages("knitr")
library(knitr)
knit2html("codebook.Rmd");
